# necessary for QEMU headers to compile in C++ code.
QEMU_CXXFLAGS += -Wno-pointer-arith


ifdef CONFIG_LLVM
#########################################################
# LLVM library

obj-y += grin/llvm/tcg-llvm.o
#obj-y += grin/llvm/helper_runtime.o
grin/llvm/tcg-llvm.o-cflags := $(LLVM_CXXFLAGS) -Wno-cast-qual
llvm-y =

# morphed bitcode - morph call instructions and function names after bitcode is
# linked together to make helper bitcode available for use by PANDA plugins
llvmmorph-y =

CLANG_FILTER = -Wold-style-declaration -fstack-protector-strong -Wno-error=cpp -g -O0 -O1 -O3 -mcx16 -Wno-shift-negative-value
QEMU_BC2FLAGS:=$(filter-out $(CLANG_FILTER),$(QEMU_CFLAGS) $(CFLAGS)) -O2 -I../target/$(TARGET_BASE_ARCH)
%.bc2: %.c $(GENERATED_HEADERS)
	$(call quiet-command,\
		$(LLVMCC) $(QEMU_INCLUDES) $(QEMU_BC2FLAGS) $(QEMU_DGFLAGS) -c -emit-llvm -o $@ $<,\
		"CLANG   $(TARGET_DIR)$@")

all: $(llvmmorph-y)

clean: clean-llvm

clean-llvm:
	rm -f $(llvm-y) $(llvmmorph-y)

endif # CONFIG_LLVM
